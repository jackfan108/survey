{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Users/jack_fan/repos/survey/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co'\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key'\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,gFAAwC;AAC5D,MAAM,kBAAkB,wPAA6C;AAE9D,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/jack_fan/repos/survey/src/components/UserInfoForm.tsx"],"sourcesContent":["import React from 'react';\nimport { ChevronRight } from 'lucide-react';\n\ninterface UserInfo {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\ninterface UserInfoFormProps {\n  userInfo: UserInfo;\n  setUserInfo: (userInfo: UserInfo) => void;\n  onSubmit: () => void;\n  loading: boolean;\n}\n\nexport const UserInfoForm: React.FC<UserInfoFormProps> = ({\n  userInfo,\n  setUserInfo,\n  onSubmit,\n  loading\n}) => {\n  const handleSubmit = () => {\n    const validateEmail = (email: string) => {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(email);\n    };\n\n    if (!userInfo.firstName || !userInfo.lastName || !userInfo.email) {\n      alert('Please fill in all fields');\n      return;\n    }\n    \n    if (!validateEmail(userInfo.email)) {\n      alert('Please enter a valid email address');\n      return;\n    }\n\n    onSubmit();\n  };\n\n  return (\n    <div className=\"max-w-sm sm:max-w-md mx-auto\">\n      <div className=\"bg-white/10 backdrop-blur-md rounded-2xl p-6 sm:p-8 border border-white/20 shadow-2xl\">\n        <div className=\"text-center mb-6 sm:mb-8\">\n          <h1 className=\"text-2xl sm:text-3xl font-bold text-white mb-2\">Political Survey</h1>\n          <p className=\"text-gray-300 text-sm sm:text-base\">Help us understand your political views.</p>\n        </div>\n\n        <div className=\"space-y-4 sm:space-y-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-white mb-2\">\n              First Name *\n            </label>\n            <input\n              type=\"text\"\n              value={userInfo.firstName}\n              onChange={(e) => setUserInfo({ ...userInfo, firstName: e.target.value })}\n              className=\"w-full p-3 sm:p-4 bg-white/5 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-400/20 transition-all text-base\"\n              placeholder=\"Enter your first name\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-white mb-2\">\n              Last Name *\n            </label>\n            <input\n              type=\"text\"\n              value={userInfo.lastName}\n              onChange={(e) => setUserInfo({ ...userInfo, lastName: e.target.value })}\n              className=\"w-full p-3 sm:p-4 bg-white/5 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-400/20 transition-all text-base\"\n              placeholder=\"Enter your last name\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-white mb-2\">\n              Email Address *\n            </label>\n            <input\n              type=\"email\"\n              value={userInfo.email}\n              onChange={(e) => setUserInfo({ ...userInfo, email: e.target.value })}\n              className=\"w-full p-3 sm:p-4 bg-white/5 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-400/20 transition-all text-base\"\n              placeholder=\"Enter your email address\"\n            />\n          </div>\n\n          <button\n            onClick={handleSubmit}\n            disabled={loading}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 disabled:bg-blue-800 text-white font-semibold py-3 sm:py-4 px-6 rounded-xl transition-colors flex items-center justify-center space-x-2 shadow-lg cursor-pointer disabled:cursor-not-allowed text-base\"\n          >\n            {loading ? (\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            ) : (\n              <>\n                <span>Start Survey</span>\n                <ChevronRight size={20} />\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":";;;;AACA;;;AAeO,MAAM,eAA4C,CAAC,EACxD,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,OAAO,EACR;IACC,MAAM,eAAe;QACnB,MAAM,gBAAgB,CAAC;YACrB,MAAM,aAAa;YACnB,OAAO,WAAW,IAAI,CAAC;QACzB;QAEA,IAAI,CAAC,SAAS,SAAS,IAAI,CAAC,SAAS,QAAQ,IAAI,CAAC,SAAS,KAAK,EAAE;YAChE,MAAM;YACN;QACF;QAEA,IAAI,CAAC,cAAc,SAAS,KAAK,GAAG;YAClC,MAAM;YACN;QACF;QAEA;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAiD;;;;;;sCAC/D,8OAAC;4BAAE,WAAU;sCAAqC;;;;;;;;;;;;8BAGpD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;8CACC,8OAAC;oCAAM,WAAU;8CAA4C;;;;;;8CAG7D,8OAAC;oCACC,MAAK;oCACL,OAAO,SAAS,SAAS;oCACzB,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,WAAW,EAAE,MAAM,CAAC,KAAK;wCAAC;oCACtE,WAAU;oCACV,aAAY;;;;;;;;;;;;sCAIhB,8OAAC;;8CACC,8OAAC;oCAAM,WAAU;8CAA4C;;;;;;8CAG7D,8OAAC;oCACC,MAAK;oCACL,OAAO,SAAS,QAAQ;oCACxB,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wCAAC;oCACrE,WAAU;oCACV,aAAY;;;;;;;;;;;;sCAIhB,8OAAC;;8CACC,8OAAC;oCAAM,WAAU;8CAA4C;;;;;;8CAG7D,8OAAC;oCACC,MAAK;oCACL,OAAO,SAAS,KAAK;oCACrB,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wCAAC;oCAClE,WAAU;oCACV,aAAY;;;;;;;;;;;;sCAIhB,8OAAC;4BACC,SAAS;4BACT,UAAU;4BACV,WAAU;sCAET,wBACC,8OAAC;gCAAI,WAAU;;;;;yFAEf;;kDACE,8OAAC;kDAAK;;;;;;kDACN,8OAAC,sNAAA,CAAA,eAAY;wCAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpC","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///Users/jack_fan/repos/survey/src/components/SurveyQuestion.tsx"],"sourcesContent":["import React from 'react';\nimport { ChevronRight, ChevronLeft } from 'lucide-react';\n\ninterface Question {\n  id: number;\n  question_text: string;\n  label_0: string;\n  label_5?: string | null;\n  label_10: string;\n}\n\ninterface Answer {\n  opinion_score?: number;\n  importance_score?: number;\n}\n\ninterface SurveyQuestionProps {\n  questions: Question[];\n  currentQuestionIndex: number;\n  answers: Record<number, Answer>;\n  onAnswerChange: (type: 'opinion_score' | 'importance_score', value: number) => void;\n  onNextQuestion: () => void;\n  onPreviousQuestion: () => void;\n  loading: boolean;\n}\n\nexport const SurveyQuestion: React.FC<SurveyQuestionProps> = ({\n  questions,\n  currentQuestionIndex,\n  answers,\n  onAnswerChange,\n  onNextQuestion,\n  onPreviousQuestion,\n  loading\n}) => {\n  if (!questions.length) return <div className=\"text-white\">Loading questions...</div>;\n  \n  const question = questions[currentQuestionIndex];\n  const currentAnswer = answers[question.id] || {};\n\n  const isCurrentQuestionComplete = () => {\n    return currentAnswer.opinion_score !== undefined && currentAnswer.importance_score !== undefined;\n  };\n\n  return (\n    <div className=\"h-dvh flex flex-col overflow-hidden\">\n      {/* Progress Bar - Fixed at top */}\n      <div className=\"w-full px-4 sm:px-6 py-4 sm:py-6 flex-shrink-0\">\n        <div className=\"max-w-2xl mx-auto\">\n          <div className=\"flex justify-between text-sm text-gray-400 mb-2\">\n            <span>Question {currentQuestionIndex + 1} of {questions.length}</span>\n            <span>{Math.round(((currentQuestionIndex + 1) / questions.length) * 100)}% complete</span>\n          </div>\n          <div className=\"w-full bg-gray-700 rounded-full h-3\">\n            <div \n              className=\"bg-blue-500 h-3 rounded-full transition-all duration-300\"\n              style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Question Content - Centered */}\n      <div className=\"flex-1 flex items-center justify-center px-4 sm:px-6 overflow-y-auto\">\n        <div className=\"max-w-2xl w-full space-y-4 sm:space-y-8\">\n          {/* Question Text */}\n          <div className=\"text-center\">\n            <h2 className=\"text-lg sm:text-2xl font-bold text-white mb-4 sm:mb-8 leading-tight\">\n              {question.question_text}\n            </h2>\n          </div>\n\n          {/* Opinion Scale (0-10) */}\n          <div className=\"space-y-3 sm:space-y-6\">\n            <h3 className=\"text-sm sm:text-lg font-semibold text-white text-center\">Your Position</h3>\n            \n            {/* Mobile Slider */}\n            <div className=\"sm:hidden\">\n              <div className=\"text-center mb-3\">\n                <div className={`inline-flex items-center justify-center w-12 h-12 rounded-full border-2 text-lg font-bold ${\n                  currentAnswer.opinion_score !== undefined \n                    ? 'border-blue-400 bg-blue-500 text-white' \n                    : 'border-gray-400 bg-white/10 text-gray-400'\n                }`}>\n                  {currentAnswer.opinion_score !== undefined ? currentAnswer.opinion_score : '?'}\n                </div>\n              </div>\n              <div className=\"px-4\">\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"9\"\n                  step=\"1\"\n                  value={currentAnswer.opinion_score ?? 5}\n                  onChange={(e) => onAnswerChange('opinion_score', parseInt(e.target.value))}\n                  onTouchStart={(e) => onAnswerChange('opinion_score', parseInt((e.target as HTMLInputElement).value))}\n                  onMouseDown={(e) => onAnswerChange('opinion_score', parseInt((e.target as HTMLInputElement).value))}\n                  className=\"w-full h-3 bg-white/10 rounded-lg appearance-none cursor-pointer slider\"\n                  style={{\n                    background: `linear-gradient(to right, #3B82F6 0%, #3B82F6 ${((currentAnswer.opinion_score ?? 5) - 1) / 8 * 100}%, rgba(255,255,255,0.1) ${((currentAnswer.opinion_score ?? 5) - 1) / 8 * 100}%, rgba(255,255,255,0.1) 100%)`\n                  }}\n                />\n                <div className=\"flex justify-between text-xs text-gray-200 mt-2 px-1\">\n                  <span>{question.label_0}</span>\n                  <span>{question.label_10}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Desktop Circles */}\n            <div className=\"hidden sm:block\">\n              <div className=\"flex items-center justify-center\">\n                <div className=\"flex items-center gap-2\">\n                  {Array.from({ length: 9 }, (_, i) => {\n                    const value = i + 1;\n                    return (\n                      <button\n                        key={value}\n                        onClick={() => onAnswerChange('opinion_score', value)}\n                        className={`w-14 h-14 rounded-full border-2 text-base font-semibold transition-all cursor-pointer flex-shrink-0 ${\n                          currentAnswer.opinion_score === value\n                            ? 'border-blue-400 bg-blue-500 text-white'\n                            : 'border-gray-400 bg-white/10 text-gray-200 hover:border-blue-300 hover:bg-white/20'\n                        }`}\n                      >\n                        {value}\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n              <div className=\"flex items-center justify-center mt-4\">\n                <div className=\"flex justify-between items-center text-base text-gray-200\" style={{ width: 'calc(9 * 3.5rem + 8 * 0.5rem)' }}>\n                  <span>{question.label_0}</span>\n                  {question.label_5 && <span>{question.label_5}</span>}\n                  <span>{question.label_10}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Importance Scale (1-5) */}\n          <div className=\"space-y-3 sm:space-y-6 pt-4 sm:pt-8 border-t border-white/20\">\n            <h3 className=\"text-sm sm:text-lg font-semibold text-white text-center\">\n              How important is this issue to you personally?\n            </h3>\n            <div className=\"flex justify-center items-center space-x-2 sm:space-x-4\">\n              <span className=\"text-xs sm:text-base text-gray-200\">Barely matters</span>\n              <div className=\"flex space-x-1 sm:space-x-4\">\n                {Array.from({ length: 5 }, (_, i) => {\n                  const value = i + 1;\n                  return (\n                    <button\n                      key={value}\n                      onClick={() => onAnswerChange('importance_score', value)}\n                      className={`w-8 h-8 sm:w-14 sm:h-14 rounded-full border-2 text-xs sm:text-base font-semibold transition-all cursor-pointer ${\n                        currentAnswer.importance_score === value\n                          ? 'border-blue-400 bg-blue-500 text-white'\n                          : 'border-gray-400 bg-white/10 text-gray-200 hover:border-blue-300 hover:bg-white/20'\n                      }`}\n                    >\n                      {value}\n                    </button>\n                  );\n                })}\n              </div>\n              <span className=\"text-xs sm:text-base text-gray-200\">Extremely important</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Buttons - Fixed at bottom */}\n      <div className=\"w-full px-4 sm:px-6 py-4 sm:py-6 flex-shrink-0\">\n        <div className=\"max-w-2xl mx-auto flex justify-between\">\n          {currentQuestionIndex > 0 ? (\n            <button\n              onClick={onPreviousQuestion}\n              disabled={loading}\n              className={`w-28 sm:w-36 flex items-center justify-center space-x-1 sm:space-x-2 px-3 sm:px-6 py-2 sm:py-3 rounded-lg font-semibold transition-all text-sm sm:text-base ${\n                loading\n                  ? 'bg-emerald-800 text-emerald-400 cursor-not-allowed'\n                  : 'bg-emerald-600 text-white hover:bg-emerald-700 cursor-pointer'\n              }`}\n            >\n              <ChevronLeft size={16} className=\"sm:w-5 sm:h-5\" />\n              <span>Previous</span>\n            </button>\n          ) : (\n            <div className=\"w-28 sm:w-36\"></div>\n          )}\n          \n          <button\n            onClick={onNextQuestion}\n            disabled={!isCurrentQuestionComplete() || loading}\n            className={`w-28 sm:w-36 flex items-center justify-center space-x-1 sm:space-x-2 px-3 sm:px-6 py-2 sm:py-3 rounded-lg font-semibold transition-all text-sm sm:text-base ${\n              !isCurrentQuestionComplete() || loading\n                ? 'bg-sky-800 text-sky-400 cursor-not-allowed'\n                : 'bg-sky-600 text-white hover:bg-sky-700 cursor-pointer'\n            }`}\n          >\n            {loading ? (\n              <div className=\"w-4 h-4 sm:w-5 sm:h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            ) : (\n              <>\n                <span>{currentQuestionIndex === questions.length - 1 ? 'Complete' : 'Next'}</span>\n                <ChevronRight size={16} className=\"sm:w-5 sm:h-5\" />\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file:///Users/jack_fan/repos/survey/src/components/CompletionScreen.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Check } from 'lucide-react';\n\nexport const CompletionScreen: React.FC = () => {\n  const [gifUrl, setGifUrl] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchRandomGif = async () => {\n      try {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/random?api_key=${process.env.NEXT_PUBLIC_GIPHY_API_KEY}&tag=politics+funny&rating=r`);\n        const data = await response.json();\n        \n        if (data.data && data.data.images) {\n          setGifUrl(data.data.images.original.url);\n        }\n      } catch (error) {\n        console.error('Error fetching GIF:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRandomGif();\n  }, []);\n  return (\n    <div className=\"max-w-sm sm:max-w-lg mx-auto text-center\">\n      <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 sm:p-8\">\n        <div className=\"bg-green-500/20 border-2 border-green-400 rounded-full w-16 h-16 sm:w-24 sm:h-24 flex items-center justify-center mx-auto mb-4 sm:mb-6\">\n          <Check size={32} className=\"text-green-400 sm:w-12 sm:h-12\" />\n        </div>\n        <h1 className=\"text-2xl sm:text-3xl font-bold text-white mb-4\">Thank You!</h1>\n        <p className=\"text-lg sm:text-xl text-gray-300 mb-4 sm:mb-6\">\n          Your responses have been recorded successfully.\n        </p>\n        <p className=\"text-sm sm:text-base text-gray-200 leading-relaxed\">\n          Thank you for participating in our political survey. Your insights help us better understand if you&apos;re a libtard commie or a bigotted fascist. Stay tuned for the results!\n        </p>\n        \n        {/* Random Political Meme */}\n        <div className=\"mt-6 sm:mt-8 rounded-lg overflow-hidden\">\n          {loading ? (\n            <div className=\"w-full h-48 sm:h-64 bg-gray-700 rounded-lg flex items-center justify-center\">\n              <div className=\"w-6 h-6 sm:w-8 sm:h-8 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            </div>\n          ) : gifUrl ? (\n            <img \n              src={gifUrl}\n              alt=\"Random political meme\"\n              className=\"w-full h-48 sm:h-64 object-contain rounded-lg bg-gray-900\"\n            />\n          ) : (\n            <div className=\"w-full h-48 sm:h-64 bg-gray-700 rounded-lg flex items-center justify-center\">\n              <p className=\"text-gray-400 text-sm sm:text-base\">No meme available</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,MAAM,mBAA6B;IACxC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB;YACrB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,CAAC,6CAA6C,uEAAwC,4BAA4B,CAAC;gBAChJ,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,EAAE;oBACjC,UAAU,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG;gBACzC;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uBAAuB;YACvC,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IACL,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,oMAAA,CAAA,QAAK;wBAAC,MAAM;wBAAI,WAAU;;;;;;;;;;;8BAE7B,8OAAC;oBAAG,WAAU;8BAAiD;;;;;;8BAC/D,8OAAC;oBAAE,WAAU;8BAAgD;;;;;;8BAG7D,8OAAC;oBAAE,WAAU;8BAAqD;;;;;;8BAKlE,8OAAC;oBAAI,WAAU;8BACZ,wBACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;mEAEf,uBACF,8OAAC;wBACC,KAAK;wBACL,KAAI;wBACJ,WAAU;;;;;iFAGZ,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAE,WAAU;sCAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhE","debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///Users/jack_fan/repos/survey/src/components/SurveyApp.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { UserInfoForm } from './UserInfoForm';\nimport { SurveyQuestion } from './SurveyQuestion';\nimport { CompletionScreen } from './CompletionScreen';\n\ninterface UserInfo {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\ninterface Question {\n  id: number;\n  question_text: string;\n  label_0: string;\n  label_5?: string | null;\n  label_10: string;\n}\n\ninterface Answer {\n  opinion_score?: number;\n  importance_score?: number;\n}\n\nconst SurveyApp = () => {\n  const [step, setStep] = useState<'user-info' | 'survey' | 'complete'>('user-info');\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userInfo, setUserInfo] = useState<UserInfo>({\n    firstName: '',\n    lastName: '',\n    email: ''\n  });\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [answers, setAnswers] = useState<Record<number, Answer>>({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n\n  const loadQuestions = async () => {\n    setLoading(true);\n    \n    try {\n      const { data, error } = await supabase.from('questions').select('*');\n      \n      if (error) {\n        console.error('Error loading questions:', error);\n      } else {\n        if (!data || data.length === 0) {\n          console.log('No questions found in database');\n        } else {\n          setQuestions(data.slice(0, 1));\n        }\n      }\n    } catch (err) {\n      console.error('Failed to load questions:', err);\n    }\n    setLoading(false);\n  };\n\n  const handleUserInfoSubmit = () => {\n    setStep('survey');\n  };\n\n  const handleAnswerChange = (type: 'opinion_score' | 'importance_score', value: number) => {\n    const questionId = questions[currentQuestionIndex]?.id;\n    if (!questionId) return;\n\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: {\n        ...prev[questionId],\n        [type]: value\n      }\n    }));\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      completeSurvey();\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const completeSurvey = async () => {\n    setLoading(true);\n    \n    try {\n      console.log('Creating survey with user info:', userInfo);\n      \n      const { data: surveyData, error: surveyError } = await supabase\n        .from('surveys')\n        .insert([{\n          first_name: userInfo.firstName,\n          last_name: userInfo.lastName,\n          email: userInfo.email\n        }])\n        .select();\n\n      if (surveyError) {\n        console.error('Error creating survey:', surveyError);\n        alert(`Error saving survey: ${surveyError.message}`);\n        setLoading(false);\n        return;\n      }\n\n      const surveyId = surveyData[0]?.id;\n      console.log('Survey created with ID:', surveyId);\n\n      const answerInserts = Object.entries(answers).map(([questionId, answer]) => ({\n        survey_id: surveyId,\n        question_id: parseInt(questionId),\n        opinion_score: answer.opinion_score,\n        importance_score: answer.importance_score\n      }));\n\n      console.log('Inserting answers:', answerInserts);\n\n      const { error: answersError } = await supabase\n        .from('answers')\n        .insert(answerInserts);\n\n      if (answersError) {\n        console.error('Error saving answers:', answersError);\n        alert(`Error saving answers: ${answersError.message}`);\n        setLoading(false);\n        return;\n      }\n\n      console.log('Survey completed successfully');\n      setLoading(false);\n      setStep('complete');\n      \n    } catch (err) {\n      console.error('Error completing survey:', err);\n      alert(`Error completing survey: ${err instanceof Error ? err.message : String(err)}`);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"main-content h-full w-full\" style={{ height: '100dvh' }}>\n      {step === 'user-info' && (\n        <div className=\"h-full p-4 sm:p-6 md:p-8 flex items-center justify-center w-full\">\n          <div className=\"w-full\">\n            <UserInfoForm\n              userInfo={userInfo}\n              setUserInfo={setUserInfo}\n              onSubmit={handleUserInfoSubmit}\n              loading={loading}\n            />\n          </div>\n        </div>\n      )}\n      \n      {step === 'survey' && (\n        <SurveyQuestion\n          questions={questions}\n          currentQuestionIndex={currentQuestionIndex}\n          answers={answers}\n          onAnswerChange={handleAnswerChange}\n          onNextQuestion={handleNextQuestion}\n          onPreviousQuestion={handlePreviousQuestion}\n          loading={loading}\n        />\n      )}\n      \n      {step === 'complete' && (\n        <div className=\"h-full p-4 sm:p-6 md:p-8 flex items-center justify-center\">\n          <CompletionScreen />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SurveyApp;"],"names":[],"mappings":"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","debugId":null}}]
}